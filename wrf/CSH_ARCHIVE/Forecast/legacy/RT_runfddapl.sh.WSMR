#!/bin/sh -v
#
# ---------------------------------------------------------------------
# Need to set these environment variables:
# ROOT is the path to where the source, executable code, master 
#    scripts, and master namelists are.
# RDATA is the path to the MMOUT files and also the obs-total files 
#    (obs_gx_hhh). It is assumed here that the
#    model output files are named MMOUT_DOMAINx
# RSCR is a scratch space for the plotting intermediate steps. The
#    scratch directories created under here are cleaned up at the end. 
# ROBS is the path to the qc-obs files (yyyymmddhh00__qc_obs_for_assimilation_s) 
#    that are created at each
#    hour in the yyyymmddhh directory.
MM5HOST=WSMR
ROOT=/data/fddahome/cycle_code/SOURCE/RT_PLOT
RDATA=$4
RSCR=$4
ROBS=$4
RV5D=$4"/v5d"
RSITES=/data/fddahome/cycle_code/SOURCE/RT_SITES
RSARCH=/data/sites/archive
RSAT=/data/input/satimg
WEBDISK=/WSMR/rtfdda/images
WEBDIR=fddawsmr
WEBDIRS=fddawsmrs
UGUIDISK=/WSMR/rtfdda/ugui
UGUIDIR=gifs
# -----------------------------------------------------
# need following NCARG lines to run on ypg/dpg/wsmr-c1
# -----------------------------------------------------
NCARG_ROOT=/usr/local/ncarg
export NCARG_ROOT
NCARG_LIB=/usr/local/ncarg/lib
export NCARG_LIB
# these are other env variables:
PATH=$PATH":/usr/local/bin"
export PATH
STATIONLIST=$ROOT/src/stationlist
export STATIONLIST          
stationg3=$ROOT/src/stationg3_dpg
export stationg3
HIRESMAP=$ROOT/src/us_county.ascii
export HIRESMAP
RANGEMAP=$ROOT/src/wsmr_map.ascii
export RANGEMAP
RIP_ROOT=/data/fddahome/cycle_code/CONSTANT_FILES/RIP
export RIP_ROOT
#
# the inputs to the script are "F" or "P" (Final or Preliminary),
#      and "Y" or "N" for cold-start or not
# If no inputs, stop the script
#if [ $# != 3 ]
#then
#  echo '******************************************'
#  echo 'Need to input cycle (F or P), cold-start (Y or N),'
#  echo '   and whether first in prelim (P)'
#  echo 'stop script - try again!'
#  echo '******************************************'
#  exit
#fi 
CYCLE=$1
COLDST=$2
FIRSTP=$3
echo  "puts: CYCLE=' $CYCLE ' COLDST=' $COLDST ' FIRSTP=' $FIRSTP
#
NOW=`date -u`
echo 'Starting fdda plotting script' $NOW ' ***'
#
#
# first check that model output files exist
NOW=`date -u`
echo '   *** Check that model output files exist:  '$NOW' ***'
for grid in 1 2 3
do
if test -s $RDATA/MMOUT_DOMAIN$grid
then
echo Found $RDATA/MMOUT_DOMAIN$grid
else
echo $RDATA/MMOUT_DOMAIN$grid not found
echo '   ***  Abort web page generation  ***'
exit
fi
done
#
# First test if ripscr directory is there. This is the scratch
#    directory for the first stage of rip.
if test -d $RSCR/ripscr
then
echo Found $RSCR/ripscr directory
rm -rf $RSCR/ripscr
mkdir $RSCR/ripscr
else
mkdir $RSCR/ripscr
fi
#
cd $RSCR/ripscr
echo "Now working in  $cwd"
# convert MMOUT files to rip files
NOW=`date -u`
echo '   *** Run ripdp (rip pre-processing) for all domains:  '$NOW' ***'
$ROOT/src/ripdpv3 Domain_1 $RDATA/MMOUT_DOMAIN1 >$ROOT/logs/ripdpd1.out 2>&1
$ROOT/src/ripdpv3 Domain_2 $RDATA/MMOUT_DOMAIN2 >$ROOT/logs/ripdpd2.out 2>&1
$ROOT/src/ripdpv3 Domain_3 $RDATA/MMOUT_DOMAIN3 >$ROOT/logs/ripdpd3.out 2>&1
# End rip file conversion
# figure out valid time
set `$ROOT/scripts/rdmdate`
echo $1
VALIDT=$1
VALIDM1=$2
VALIDI=$3
validitag=$VALIDI'00'
echo 'VALIDT=' $VALIDT ' VALIDM1=' $VALIDM1 'VALIDI=' $VALIDI
#
# figure out eta bc time
cp $RSCR/etabcdate $RSCR/ripscr/
set `$ROOT/scripts/rdetadate`
echo $1
ETADATE=$1
echo 'ETADATE=' $ETADATE
#
#
# find latest time in ripscr directory.
# look in Domain_1.xtimes for all times.
# NTIMES is the number of output times in this MMOUT file. Only
#    check grid 1 - assume grids 2 and 3 have the same no. of times.
# XTIMEP is the fcst hour (including restarts) of the latest time.
set `$ROOT/scripts/rdxt`
#echo $1 $2
NTIMES=$1
XTIMEP=$2
IXTIMEP=$3
fcldtag='f'$IXTIMEP'00'
echo 'NTIMES, XTIMEP=' $NTIMES $XTIMEP $IXTIMEP
# use this latest time in the rip namelists
# If you want to hard-wire the program to plot a particular
#   fcst hour (not the latest), then insert it here
# XTIMEP=21. 
#
# calculate various tags that describe the cycle
if [ $CYCLE = 'F' ]
then
  if [ $COLDST = 'Y' ]
  then
    if [ $NTIMES -gt 2 ]
    then
    cycletag='final'
    cycletg2='final'
    else
    cycletag='coldst'
    cycletg2='cldst'
    fi
  else
  cycletag='final'
  cycletg2='final'
  fi
else
  if [ $FIRSTP = 'P' ]
  then
   cycletag='prelim'
   cycletg2='preli'
  else
   if [ $NTIMES -gt 3 ]
   then
    flength=`expr $NTIMES - 3`
    f2length=$flength
    if [ $flength -lt 10 ]
    then
    f2length='0'$flength
    fi
    cycletag='pfcst_'$f2length'hr'
    cycletg2='f'$f2length'00'
    echo 'flength=' $flength
   else
    cycletag='prelim'
    cycletg2='preli'
   fi
  fi
fi
echo 'cycletag=' $cycletag $cycletg2
#
NOW=`date -u`
echo '   *** Do site generation:  '$NOW' ***'
$RSITES/scripts/runsites.sh $RSITES $RDATA $RSCR $NTIMES $cycletg2 $RSARCH >$RSITES/logs/runsites.log 2>&1
#
# Now run rip
NOW=`date -u`
echo '   *** Run rip for all domains:  '$NOW' ***'
# riprun is a scratch directory for the second stage of rip - the
#    cgm files are created here.
if test -d $RSCR/riprun
then
echo Found $RSCR/riprun directory
rm -rf $RSCR/riprun
mkdir $RSCR/riprun
else
mkdir $RSCR/riprun
fi
#
# if obs files, copy to riprun
rm -f $RSCR/riprun/indata
cat $ROBS/$VALIDM1'_qc_obs_for_assimilation_s' $ROBS/$VALIDT'_qc_obs_for_assimilation_s' > $RSCR/riprun/indata
#
# Now, run the custom-fdda version of rip to get the obs plots, etc.
cd $RSCR/riprun
echo "Now working in  $cwd"
if [ $cycletag = 'final' ]
then
  cat $ROOT/namelists/Mdomain1.final.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain1.in
  cat $ROOT/namelists/Mdomain2.final.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain2.in
  cat $ROOT/namelists/Mdomain3.final.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain3.in
  cat $ROOT/namelists/domain1.in $ROOT/namelists/Mdomain1.part2.in.$MM5HOST > $RSCR/riprun/domain1.in
  cat $ROOT/namelists/domain2.in $ROOT/namelists/Mdomain2.part2.in.$MM5HOST > $RSCR/riprun/domain2.in
  cat $ROOT/namelists/domain3.in $ROOT/namelists/Mdomain3.part2.in.$MM5HOST > $RSCR/riprun/domain3.in
else
  if [ $cycletag = 'prelim' ]
  then
  cat $ROOT/namelists/Mdomain1.prelim.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain1.in
  cat $ROOT/namelists/Mdomain2.prelim.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain2.in
  cat $ROOT/namelists/Mdomain3.prelim.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain3.in
  cat $ROOT/namelists/domain1.in $ROOT/namelists/Mdomain1.part2.in.$MM5HOST > $RSCR/riprun/domain1.in
  cat $ROOT/namelists/domain2.in $ROOT/namelists/Mdomain2.part2.in.$MM5HOST > $RSCR/riprun/domain2.in
  cat $ROOT/namelists/domain3.in $ROOT/namelists/Mdomain3.part2.in.$MM5HOST > $RSCR/riprun/domain3.in
  else
    cat $ROOT/namelists/Mdomain1.fcst.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain1.in
    cat $ROOT/namelists/Mdomain2.fcst.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain2.in
    cat $ROOT/namelists/Mdomain3.fcst.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain3.in
  cat $ROOT/namelists/domain1.in $ROOT/namelists/Mdomain1.part2_noobs.in.$MM5HOST > $RSCR/riprun/domain1.in
  cat $ROOT/namelists/domain2.in $ROOT/namelists/Mdomain2.part2_noobs.in.$MM5HOST > $RSCR/riprun/domain2.in
  cat $ROOT/namelists/domain3.in $ROOT/namelists/Mdomain3.part2_noobs.in.$MM5HOST > $RSCR/riprun/domain3.in
  fi
fi
##cat $ROOT/namelists/domain1.in $ROOT/namelists/Mdomain1.part2.in.$MM5HOST > $RSCR/riprun/domain1.in
##cat $ROOT/namelists/domain2.in $ROOT/namelists/Mdomain2.part2.in.$MM5HOST > $RSCR/riprun/domain2.in
##cat $ROOT/namelists/domain3.in $ROOT/namelists/Mdomain3.part2.in.$MM5HOST > $RSCR/riprun/domain3.in
$ROOT/src/rip.exe -f $RSCR/ripscr/Domain_1 domain1 >$ROOT/logs/ripd1.out 2>&1
$ROOT/src/rip.exe -f $RSCR/ripscr/Domain_2 domain2 >$ROOT/logs/ripd2.out 2>&1
$ROOT/src/rip.exe -f $RSCR/ripscr/Domain_3 domain3 >$ROOT/logs/ripd3.out 2>&1
mv  domain1.cgm domain12.cgm
mv  domain2.cgm domain22.cgm
mv  domain3.cgm domain32.cgm
cd $RSCR/ripscr
echo "Now working in  $cwd"
# convert MMOUT files to rip files
NOW=`date -u`
echo '   *** Run ripdp (rip pre-processing) for all domains:  '$NOW' ***'
$RIP_ROOT/ripdp Domain_1 $RDATA/MMOUT_DOMAIN1 >$ROOT/logs/ripdpd1.out 2>&1
$RIP_ROOT/ripdp Domain_2 $RDATA/MMOUT_DOMAIN2 >$ROOT/logs/ripdpd2.out 2>&1
$RIP_ROOT/ripdp Domain_3 $RDATA/MMOUT_DOMAIN3 >$ROOT/logs/ripdpd3.out 2>&1
# End rip file conversion
cd $RSCR/riprun
echo "Now working in  $cwd"
if [ $cycletag = 'final' ]
then
  cat $ROOT/namelists/Mdomain1.final.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain1.in
  cat $ROOT/namelists/Mdomain2.final.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain2.in
  cat $ROOT/namelists/Mdomain3.final.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain3.in
else
  if [ $cycletag = 'prelim' ]
  then
  cat $ROOT/namelists/Mdomain1.prelim.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain1.in
  cat $ROOT/namelists/Mdomain2.prelim.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain2.in
  cat $ROOT/namelists/Mdomain3.prelim.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain3.in
  else
    cat $ROOT/namelists/Mdomain1.fcst.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain1.in
    cat $ROOT/namelists/Mdomain2.fcst.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain2.in
    cat $ROOT/namelists/Mdomain3.fcst.$MM5HOST     \
        | sed s/plttime/$XTIMEP/g  \
        > $ROOT/namelists/domain3.in
  fi
fi
cat $ROOT/namelists/domain1.in $ROOT/namelists/Mdomain1.part1.in.$MM5HOST > $RSCR/riprun/domain1.in
cat $ROOT/namelists/domain2.in $ROOT/namelists/Mdomain2.part1.in.$MM5HOST > $RSCR/riprun/domain2.in
cat $ROOT/namelists/domain3.in $ROOT/namelists/Mdomain3.part1.in.$MM5HOST > $RSCR/riprun/domain3.in
# First, run the standard RIP to get the basic plots
$RIP_ROOT/rip_new.exe -f $RSCR/ripscr/Domain_1 domain1 >$ROOT/logs/ripd1.out 2>&1
$RIP_ROOT/rip_new.exe -f $RSCR/ripscr/Domain_2 domain2 >$ROOT/logs/ripd2.out 2>&1
$RIP_ROOT/rip_new.exe -f $RSCR/ripscr/Domain_3 domain3 >$ROOT/logs/ripd3.out 2>&1
mv  domain1.cgm domain11.cgm
mv  domain2.cgm domain21.cgm
mv  domain3.cgm domain31.cgm
# Now, cat together the .cgm files
cat domain11.cgm domain12.cgm > domain1.cgm
cat domain21.cgm domain22.cgm > domain2.cgm
cat domain31.cgm domain32.cgm > domain3.cgm
# End rip
#
# now check that cgm output files exist
NOW=`date -u`
echo '   *** Check that cgm output files exist:  '$NOW' ***'
for grid in 1 2 3
do
if test -s $RSCR/riprun/'domain'$grid'.cgm'
then
echo Found $RSCR/riprun/'domain'$grid'.cgm'
else
echo $RSCR/riprun/'domain'$grid'.cgm' not found
echo '   ***  Abort web page generation  ***'
exit
fi
done
# 
#
# abort if core file exists - indicates a rip problem
NOW=`date -u`
echo '   *** Check if rip core file exists:  '$NOW' ***'
if test -s core
then
echo rip core file found
echo '   ***  Abort web page generation  ***'
exit
else
echo No rip core - apparently ran ok
fi
#
# figure out valid time
set `$ROOT/scripts/rdmdate`
echo $1
VALID=$1
validtag=$VALID'00'
echo 'VALID=' $VALID

# figure out HOUR
HOUR=`expr $VALID % 100`
if [ $HOUR -lt 10 ]
then
   HOUR=0$HOUR
fi
echo 'HOUR=' $HOUR
#
# figure out obs file name for numobs
#IXTIMEP=109
cd $RSCR/riprun
echo "Now working in  $cwd"
for grid in 1 2 3
do
fileab='obs_g'$grid'_'$IXTIMEP
echo 'fileab=' $fileab
rm -f ./obsnum
cp $RDATA/$fileab obsnum
set `$ROOT/scripts/rdnobsa`
if [ $grid = 1 ]
then
NTOT1=$1
NMETA1=$2
NSPEC1=$3
NSHIP1=$4
NSYNO1=$5
elif [ $grid = 2 ]
then
NTOT2=$1
NMETA2=$2
NSPEC2=$3
NSHIP2=$4
NSYNO2=$5
elif [ $grid = 3 ]
then
NTOT3=$1
NMETA3=$2
NSPEC3=$3
NSHIP3=$4
NSYNO3=$5
fi
set `$ROOT/scripts/rdnobsb`
if [ $grid = 1 ]
then
NTEMP1=$1
NPILO1=$2
NSATW1=$3
NSAMS1=$4
NPROF1=$5
echo Grid $grid $NTOT1 $NMETA1 $NSPEC1 $NSHIP1 $NSYNO1 $NTEMP1 $NPILO1 $NSATW1 $NSAMS1 $NPROF1
elif [ $grid = 2 ]
then
NTEMP2=$1
NPILO2=$2
NSATW2=$3
NSAMS2=$4
NPROF2=$5
echo Grid $grid $NTOT2 $NMETA2 $NSPEC2 $NSHIP2 $NSYNO2 $NTEMP2 $NPILO2 $NSATW2 $NSAMS2 $NPROF2
elif [ $grid = 3 ]
then
NTEMP3=$1
NPILO3=$2
NSATW3=$3
NSAMS3=$4
NPROF3=$5
echo Grid $grid $NTOT3 $NMETA3 $NSPEC3 $NSHIP3 $NSYNO3 $NTEMP3 $NPILO3 $NSATW3 $NSAMS3 $NPROF3
fi
done

#
# next section is for original smaller images. After its done,
#  re-do with larger images in s directory
#
# The www directory is a scratch directory to put everything in.
# first test if www directory is there
if test -d $RSCR/www
then
echo Found $RSCR/www directory
rm -rf $RSCR/www
mkdir $RSCR/www
else
mkdir $RSCR/www
fi
#

# change times and tags in master html file
cat $ROOT/scripts/MfddaN.html     \
        | sed s/fddaN/$WEBDIR/g  \
        | sed s/hhmm/$HOUR"00"/g  \
        | sed s/validtime/$VALID/g  \
        | sed s/cycleinfo/$cycletag/g  \
        | sed s/tcoldstart/$XTIMEP/g  \
        | sed s/tetadate/$ETADATE/g  \
        | sed s/njtot1/$NTOT1/g  \
        | sed s/njmeta1/$NMETA1/g  \
        | sed s/njspec1/$NSPEC1/g  \
        | sed s/njship1/$NSHIP1/g  \
        | sed s/njsyno1/$NSYNO1/g  \
        | sed s/njtemp1/$NTEMP1/g  \
        | sed s/njpilo1/$NPILO1/g  \
        | sed s/njsatw1/$NSATW1/g  \
        | sed s/njsams1/$NSAMS1/g  \
        | sed s/njprof1/$NPROF1/g  \
        | sed s/njtot2/$NTOT2/g  \
        | sed s/njmeta2/$NMETA2/g  \
        | sed s/njspec2/$NSPEC2/g  \
        | sed s/njship2/$NSHIP2/g  \
        | sed s/njsyno2/$NSYNO2/g  \
        | sed s/njtemp2/$NTEMP2/g  \
        | sed s/njpilo2/$NPILO2/g  \
        | sed s/njsatw2/$NSATW2/g  \
        | sed s/njsams2/$NSAMS2/g  \
        | sed s/njprof2/$NPROF2/g  \
        | sed s/njtot3/$NTOT3/g  \
        | sed s/njmeta3/$NMETA3/g  \
        | sed s/njspec3/$NSPEC3/g  \
        | sed s/njship3/$NSHIP3/g  \
        | sed s/njsyno3/$NSYNO3/g  \
        | sed s/njtemp3/$NTEMP3/g  \
        | sed s/njpilo3/$NPILO3/g  \
        | sed s/njsatw3/$NSATW3/g  \
        | sed s/njsams3/$NSAMS3/g  \
        | sed s/njprof3/$NPROF3/g  \
        | sed s/cycletg2/$cycletg2/g  \
        | sed s/validtag/$validtag/g  \
        | sed s/validitag/$validitag/g  \
        | sed s/fcldtag/$fcldtag/g  \
        > $RSCR/www/fdda.html

# change times and tags in master obs html file
cat $ROOT/scripts/Mobstab.html     \
        | sed s/hhmm/$HOUR"00"/g  \
        | sed s/validtime/$VALID/g  \
        | sed s/cycleinfo/$cycletag/g  \
        | sed s/tcoldstart/$XTIMEP/g  \
        | sed s/tetadate/$ETADATE/g  \
        | sed s/njtot1/$NTOT1/g  \
        | sed s/njmeta1/$NMETA1/g  \
        | sed s/njspec1/$NSPEC1/g  \
        | sed s/njship1/$NSHIP1/g  \
        | sed s/njsyno1/$NSYNO1/g  \
        | sed s/njtemp1/$NTEMP1/g  \
        | sed s/njpilo1/$NPILO1/g  \
        | sed s/njsatw1/$NSATW1/g  \
        | sed s/njsams1/$NSAMS1/g  \
        | sed s/njprof1/$NPROF1/g  \
        | sed s/njtot2/$NTOT2/g  \
        | sed s/njmeta2/$NMETA2/g  \
        | sed s/njspec2/$NSPEC2/g  \
        | sed s/njship2/$NSHIP2/g  \
        | sed s/njsyno2/$NSYNO2/g  \
        | sed s/njtemp2/$NTEMP2/g  \
        | sed s/njpilo2/$NPILO2/g  \
        | sed s/njsatw2/$NSATW2/g  \
        | sed s/njsams2/$NSAMS2/g  \
        | sed s/njprof2/$NPROF2/g  \
        | sed s/njtot3/$NTOT3/g  \
        | sed s/njmeta3/$NMETA3/g  \
        | sed s/njspec3/$NSPEC3/g  \
        | sed s/njship3/$NSHIP3/g  \
        | sed s/njsyno3/$NSYNO3/g  \
        | sed s/njtemp3/$NTEMP3/g  \
        | sed s/njpilo3/$NPILO3/g  \
        | sed s/njsatw3/$NSATW3/g  \
        | sed s/njsams3/$NSAMS3/g  \
        | sed s/njprof3/$NPROF3/g  \
        > $RSCR/www/$cycletg2"_"$validtag"_d1_obstab"_"$validitag"_"$fcldtag".html
cp $RSCR/www/$cycletg2"_"$validtag"_d1_obstab"_"$validitag"_"$fcldtag".html $RSCR/www/$cycletg2"_"$validtag"_d2_obstab"_"$validitag"_"$fcldtag".html
cp $RSCR/www/$cycletg2"_"$validtag"_d1_obstab"_"$validitag"_"$fcldtag".html $RSCR/www/$cycletg2"_"$validtag"_d3_obstab"_"$validitag"_"$fcldtag".html
#
#
# Now divide up cgm files into separate gif images
# Create a scratch gifs directory first
if test -d $RSCR/gifs
then
echo Found $RSCR/gifs directory
rm -rf $RSCR/gifs
mkdir $RSCR/gifs
else
mkdir $RSCR/gifs
fi
# Create a scratch gifs directory for the UGUI images
if test -d $RSCR/gifs_ugui
then
echo Found $RSCR/gifs_ugui directory
rm -rf $RSCR/gifs_ugui
mkdir $RSCR/gifs_ugui
else
mkdir $RSCR/gifs_ugui
fi
NOW=`date -u`
echo '   *** Convert cgm files to gif files:  '$NOW' ***'
$ROOT/scripts/conv2gif2.sh $ROOT $RSCR $cycletg2 $validtag $validitag $fcldtag >$ROOT/logs/conv.log 2>&1
$ROOT/scripts/conv2gif_ugui.sh $ROOT $RSCR $cycletg2 $validtag $validitag $fcldtag >$ROOT/logs/conv_ugui.log 2>&1
# End of conversion to gif
NOW=`date -u`
echo '   *** Convert sat files to gif files:  '$NOW' ***'
$ROOT/scripts/sat.sh $ROOT $RSCR $RSAT $cycletg2 $validtag $validitag $fcldtag $WEBDIR >$ROOT/logs/convsat.log 2>&1
# End of conversion to gif
# 
NOW=`date -u`
echo '   *** Move all gifs to www directory:  '$NOW' ***'
# Move gif images to www directory
mv $RSCR/gifs/*.gif $RSCR/www/
#
# Now move www directory to appropriate hour/cycle tag, and then
#    scp to atec-server.
NOW=`date -u`
echo '   *** Move www directory to atec-server:  '$NOW' ***'
rm -rf $RSCR/$VALID'00_'$cycletag
mv $RSCR/www $RSCR/$VALID'00_'$cycletag

# cp -r $RSCR/$VALID'_'$cycletag /scratch/jc/
scp -r $RSCR/$VALID'00_'$cycletag 4dwx@128.117.200.214:$WEBDISK/$WEBDIR/
scp -r $RSCR'/gifs_ugui/'$validtag 4dwx@128.117.200.214:$UGUIDISK/$UGUIDIR/
#
# scrub files older than 2 day on atec-server in $WEBDIR
ssh 4dwx@128.117.200.214 "find $WEBDISK/$WEBDIR -mtime +1 -type d -print -exec rm -r {} \;"
# save locally
cp -r $RSCR/$VALID'00_'$cycletag /data/web_products
find /data/web_products -mtime +2 -type d -print -exec rm -r {} \;

#
# ****************************************************************
# end first

# ***************************************************************
#
# The www directory is a scratch directory to put everything in.
# first test if www directory is there
if test -d $RSCR/www
then
echo Found $RSCR/www directory
rm -rf $RSCR/www
mkdir $RSCR/www
else
mkdir $RSCR/www
fi
#

# change times and tags in master html file
cat $ROOT/scripts/MfddaN.html     \
        | sed s/fddaN/$WEBDIRS/g  \
        | sed s/hhmm/$HOUR"00"/g  \
        | sed s/validtime/$VALID/g  \
        | sed s/cycleinfo/$cycletag/g  \
        | sed s/tcoldstart/$XTIMEP/g  \
        | sed s/tetadate/$ETADATE/g  \
        | sed s/njtot1/$NTOT1/g  \
        | sed s/njmeta1/$NMETA1/g  \
        | sed s/njspec1/$NSPEC1/g  \
        | sed s/njship1/$NSHIP1/g  \
        | sed s/njsyno1/$NSYNO1/g  \
        | sed s/njtemp1/$NTEMP1/g  \
        | sed s/njpilo1/$NPILO1/g  \
        | sed s/njsatw1/$NSATW1/g  \
        | sed s/njsams1/$NSAMS1/g  \
        | sed s/njprof1/$NPROF1/g  \
        | sed s/njtot2/$NTOT2/g  \
        | sed s/njmeta2/$NMETA2/g  \
        | sed s/njspec2/$NSPEC2/g  \
        | sed s/njship2/$NSHIP2/g  \
        | sed s/njsyno2/$NSYNO2/g  \
        | sed s/njtemp2/$NTEMP2/g  \
        | sed s/njpilo2/$NPILO2/g  \
        | sed s/njsatw2/$NSATW2/g  \
        | sed s/njsams2/$NSAMS2/g  \
        | sed s/njprof2/$NPROF2/g  \
        | sed s/njtot3/$NTOT3/g  \
        | sed s/njmeta3/$NMETA3/g  \
        | sed s/njspec3/$NSPEC3/g  \
        | sed s/njship3/$NSHIP3/g  \
        | sed s/njsyno3/$NSYNO3/g  \
        | sed s/njtemp3/$NTEMP3/g  \
        | sed s/njpilo3/$NPILO3/g  \
        | sed s/njsatw3/$NSATW3/g  \
        | sed s/njsams3/$NSAMS3/g  \
        | sed s/njprof3/$NPROF3/g  \
        | sed s/cycletg2/$cycletg2/g  \
        | sed s/validtag/$validtag/g  \
        | sed s/validitag/$validitag/g  \
        | sed s/fcldtag/$fcldtag/g  \
        > $RSCR/www/fdda.html

# change times and tags in master obs html file
cat $ROOT/scripts/Mobstab.html     \
        | sed s/hhmm/$HOUR"00"/g  \
        | sed s/validtime/$VALID/g  \
        | sed s/cycleinfo/$cycletag/g  \
        | sed s/tcoldstart/$XTIMEP/g  \
        | sed s/tetadate/$ETADATE/g  \
        | sed s/njtot1/$NTOT1/g  \
        | sed s/njmeta1/$NMETA1/g  \
        | sed s/njspec1/$NSPEC1/g  \
        | sed s/njship1/$NSHIP1/g  \
        | sed s/njsyno1/$NSYNO1/g  \
        | sed s/njtemp1/$NTEMP1/g  \
        | sed s/njpilo1/$NPILO1/g  \
        | sed s/njsatw1/$NSATW1/g  \
        | sed s/njsams1/$NSAMS1/g  \
        | sed s/njprof1/$NPROF1/g  \
        | sed s/njtot2/$NTOT2/g  \
        | sed s/njmeta2/$NMETA2/g  \
        | sed s/njspec2/$NSPEC2/g  \
        | sed s/njship2/$NSHIP2/g  \
        | sed s/njsyno2/$NSYNO2/g  \
        | sed s/njtemp2/$NTEMP2/g  \
        | sed s/njpilo2/$NPILO2/g  \
        | sed s/njsatw2/$NSATW2/g  \
        | sed s/njsams2/$NSAMS2/g  \
        | sed s/njprof2/$NPROF2/g  \
        | sed s/njtot3/$NTOT3/g  \
        | sed s/njmeta3/$NMETA3/g  \
        | sed s/njspec3/$NSPEC3/g  \
        | sed s/njship3/$NSHIP3/g  \
        | sed s/njsyno3/$NSYNO3/g  \
        | sed s/njtemp3/$NTEMP3/g  \
        | sed s/njpilo3/$NPILO3/g  \
        | sed s/njsatw3/$NSATW3/g  \
        | sed s/njsams3/$NSAMS3/g  \
        | sed s/njprof3/$NPROF3/g  \
        > $RSCR/www/$cycletg2"_"$validtag"_d1_obstab"_"$validitag"_"$fcldtag".html
cp $RSCR/www/$cycletg2"_"$validtag"_d1_obstab"_"$validitag"_"$fcldtag".html $RSCR/www/$cycletg2"_"$validtag"_d2_obstab"_"$validitag"_"$fcldtag".html
cp $RSCR/www/$cycletg2"_"$validtag"_d1_obstab"_"$validitag"_"$fcldtag".html $RSCR/www/$cycletg2"_"$validtag"_d3_obstab"_"$validitag"_"$fcldtag".html
#
#
# Now divide up cgm files into separate gif images
# Create a scratch gifs directory first
if test -d $RSCR/gifs
then
echo Found $RSCR/gifs directory
rm -rf $RSCR/gifs
mkdir $RSCR/gifs
else
mkdir $RSCR/gifs
fi
NOW=`date -u`
echo '   *** Convert cgm files to gif files:  '$NOW' ***'
# ********* use conv2gif2s.sh *******************************
###
###
### REMOVE This step - not needed for YPG/WSMR!
###
###$ROOT/scripts/conv2gif2s.sh $ROOT $RSCR $cycletg2 $validtag $validitag $fcldtag >$ROOT/logs/conv.log 2>&1
# End of conversion to gif
NOW=`date -u`
echo '   *** Convert sat files to gif files:  '$NOW' ***'
###$ROOT/scripts/sats.sh $ROOT $RSCR $RSAT $cycletg2 $validtag $validitag $fcldtag $WEBDIRS >$ROOT/logs/convsat.log 2>&1
# End of conversion to gif
# 
NOW=`date -u`
echo '   *** Move all gifs to www directory:  '$NOW' ***'
# Move gif images to www directory
###mv $RSCR/gifs/*.gif $RSCR/www/
#
# Now move www directory to appropriate hour/cycle tag, and then
#    scp to atec-server.
NOW=`date -u`
echo '   *** Move www directory to atec-server:  '$NOW' ***'
###rm -rf $RSCR/$VALID'00_'$cycletag
###mv $RSCR/www $RSCR/$VALID'00_'$cycletag

# cp -r $RSCR/$VALID'_'$cycletag /scratch/jc/
###scp -r $RSCR/$VALID'00_'$cycletag 4dwx@128.117.200.214:$WEBDISK/$WEBDIRS/
# save locally
#cp -r $RSCR/$VALID'00_'$cycletag /data/web_products_big
#
#
WEB=$WEBDISK/$WEBDIR/$VALID'00_'$cycletag
WEBS=$WEBDISK/$WEBDIRS/$VALID'00_'$cycletag
#NOW=`date -u`
#echo '   *** Do site generation:  '$NOW' ***'
#$RSITES/scripts/runsites.sh $RSITES $RDATA $RSCR $NTIMES $cycletg2 $RSARCH >$RSITES/logs/runsites.log 2>&1
#NOW=`date -u`
#echo '   *** Do vis5d stuff:  '$NOW' ***'
#$ROOT/scripts/v5d.csh $RV5D $cycletg2 $validtag $validitag $fcldtag $WEB $WEBS $NTIMES >$ROOT/logs/v5dimg.log 2>&1
#
# scrub files older than 2 day on atec-server in $WEBDIRS
###ssh 4dwx@128.117.200.214 "find $WEBDISK/$WEBDIRS -mtime +1 -type d -print -exec rm -r {} \;"
# scrub files older than 10 day on local disk in $WEBDIRS
#find /data/web_products_big -mtime +2 -type d -print -exec rm -r {} \;
#
#
# ****************************************************************
# end second gif and html directory generation
#
# clean up directories
cd $RSCR
echo "Now working in  $cwd"
rm -rf $RSCR/ripscr
rm -rf $RSCR/riprun
rm -rf $RSCR/gifs
#rm -rf $RSCR/$VALID'_'$cycletag
rm -rf $RSCR/$VALID'00_'$cycletag
#
NOW=`date -u`
echo '   *** All done:  '$NOW' ***'

cd ../
echo "Now working in  $cwd"

rm -rf $RDATA

exit 0

